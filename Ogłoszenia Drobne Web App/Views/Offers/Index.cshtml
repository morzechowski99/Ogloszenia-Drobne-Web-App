@model Ogłoszenia_Drobne_Web_App.Pagination.PaginatedList<Ogłoszenia_Drobne_Web_App.Models.Offer>

@{
    ViewData["Title"] = "Index";
}

<h1>Ogłoszenia</h1>

<p>
    <a class="btn buttonDetails" asp-action="Create">Dodaj ogłoszenie</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Wyszukaj: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Szukaj" class="btn btn-default buttonDetails" /> |
            <a class="btn buttonDetails" asp-action="Index">Powrót</a>
        </p>
    </div>
</form>

<table class="table table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].ExpirationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].ViewCounter)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Wage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Category)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExpirationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ViewCounter)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Wage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.CategoryName)
                </td>
                <td>
                    <a class="btn buttonDetails" asp-action="Details" asp-route-id="@item.Id">Szczegóły</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default buttonDetails @prevDisabled">
    Poprzednia
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default buttonDetails @nextDisabled">
    Nastepna
</a>

<div class="btn-group" role="group">
    <button id="btnGroupDrop1" type="button" class="btn buttonDetails dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Ilość ofert
    </button>
    <div class="dropdown-menu dropdownColor" aria-labelledby="btnPageSelect">
        <a class="dropdown-item" id="five">5</a>
        <a class="dropdown-item" id="ten">10</a>
        <a class="dropdown-item" id="ff">15</a>
    </div>
</div>

<script>
    if (getCookie("page") === undefined)
        setCookie("page", 5, 365);

    document.getElementById("five").onclick = function () { fivePerPage() };
    document.getElementById("ten").onclick = function () { tenPerPage() };
    document.getElementById("ff").onclick = function () { ffPerPage() };

    function fivePerPage() {
        setCookie("page", 5, 365);
        location.reload();
    }

    function tenPerPage() {
        setCookie("page", 10, 365);
        location.reload();
    }

    function ffPerPage() {
        setCookie("page", 15, 365);
        location.reload();
    }

    function getCookie(name) {
        var dc = document.cookie;
        var prefix = name + "=";
        var begin = dc.indexOf("; " + prefix);
        if (begin == -1) {
            begin = dc.indexOf(prefix);
            if (begin != 0) return null;
        }
        else {
            begin += 2;
            var end = document.cookie.indexOf(";", begin);
            if (end == -1) {
                end = dc.length;
            }
        }
        return decodeURI(dc.substring(begin + prefix.length, end));
    }

    function setCookie(cname, cvalue, exdays) {
        var d = new Date();
        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
        var expires = "expires=" + d.toUTCString();
        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
        }
</script>
